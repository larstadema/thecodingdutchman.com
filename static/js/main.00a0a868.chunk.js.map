{"version":3,"sources":["logo.png","components/icons/linkedin.tsx","components/icons/twitter.tsx","components/icons/youtube.tsx","components/footer/component.tsx","components/header/component.tsx","components/main/component.tsx","pages/home.tsx","app.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","LinkedIn","color","xmlns","viewBox","fill","d","Twitter","Youtube","Footer","className","href","target","Header","src","logo","alt","Main","Home","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00a0a868.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.401ec499.png\";","import React from 'react';\n\nexport const LinkedIn = ({ color = '#c9c9c9' }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n    <path\n      fill={color}\n      d=\"m23.994 24v-.001h.006v-8.802c0-4.306-.927-7.623-5.961-7.623-2.42 0-4.044 1.328-4.707 2.587h-.07v-2.185h-4.773v16.023h4.97v-7.934c0-2.089.396-4.109 2.983-4.109 2.549 0 2.587 2.384 2.587 4.243v7.801z\"\n    />\n    <path fill={color} d=\"m.396 7.977h4.976v16.023h-4.976z\" />\n    <path\n      fill={color}\n      d=\"m2.882 0c-1.591 0-2.882 1.291-2.882 2.882s1.291 2.909 2.882 2.909 2.882-1.318 2.882-2.909c-.001-1.591-1.292-2.882-2.882-2.882z\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const Twitter = ({ color = '#c9c9c9' }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n    <path\n      fill={color}\n      d=\"M9.5 27.1c11.2 0 17.4-9.3 17.4-17.4 0-0.3 0-0.5 0-0.8 1.2-0.9 2.2-1.9 3-3.2 -1.1 0.5-2.3 0.8-3.5 1 1.3-0.8 2.2-2 2.7-3.4 -1.2 0.7-2.5 1.2-3.9 1.5 -1.1-1.2-2.7-1.9-4.5-1.9 -3.4 0-6.1 2.7-6.1 6.1 0 0.5 0.1 0.9 0.2 1.4C9.7 10.1 5.2 7.7 2.2 4 1.7 4.9 1.4 6 1.4 7.1c0 2.1 1.1 4 2.7 5.1 -1 0-1.9-0.3-2.8-0.8 0 0 0 0.1 0 0.1 0 3 2.1 5.4 4.9 6 -0.5 0.1-1.1 0.2-1.6 0.2 -0.4 0-0.8 0-1.1-0.1 0.8 2.4 3 4.2 5.7 4.2 -2.1 1.6-4.7 2.6-7.6 2.6 -0.5 0-1 0-1.5-0.1C2.8 26.1 6 27.1 9.5 27.1\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nexport const Youtube = ({ color = '#c9c9c9' }) => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n    <path\n      fill={color}\n      d=\"M29.7 9c0 0-0.3-2.1-1.2-3 -1.1-1.2-2.4-1.2-3-1.3C21.3 4.5 15 4.5 15 4.5h0c0 0-6.3 0-10.5 0.3C3.9 4.8 2.6 4.8 1.5 6 0.6 6.9 0.3 9 0.3 9S0 11.4 0 13.9v2.3C0 18.6 0.3 21 0.3 21s0.3 2.1 1.2 3c1.1 1.2 2.6 1.2 3.3 1.3C7.2 25.5 15 25.6 15 25.6s6.3 0 10.5-0.3c0.6-0.1 1.9-0.1 3-1.3 0.9-0.9 1.2-3 1.2-3s0.3-2.4 0.3-4.9v-2.3C30 11.4 29.7 9 29.7 9zM11.9 18.9l0-8.4 8.1 4.2L11.9 18.9z\"\n    />\n  </svg>\n);\n","import React from 'react';\n\nimport * as Icons from '../icons';\n\nimport './styles.css';\n\nexport const Footer = () => (\n  <footer>\n    <ul className=\"footer__list\">\n      <li className=\"footer__list-item\">\n        <a href=\"https://www.linkedin.com/in/lars-tadema/\" target=\"blank\">\n          <Icons.LinkedIn />\n        </a>\n      </li>\n      <li className=\"footer__list-item\">\n        <a href=\"https://twitter.com/DutchmanCoding\" target=\"blank\">\n          <Icons.Twitter />\n        </a>\n      </li>\n      <li className=\"footer__list-item\">\n        <a href=\"https://www.youtube.com/channel/UCsrhQcikRcUFnNcvmpBWUKA\" target=\"blank\">\n          <Icons.Youtube />\n        </a>\n      </li>\n    </ul>\n  </footer>\n);\n","import React from 'react';\n\nimport logo from '../../logo.png';\n\nimport './styles.css';\n\nexport const Header = () => (\n  <header className=\"hero\">\n    <img className=\"hero__logo\" src={logo} alt=\"hero-logo\" />\n    <h1 className=\"hero__title\">TheCodingDutchman</h1>\n    <h2 className=\"hero__subtitle\">Lars Tadema</h2>\n    <hr />\n    <strong className=\"hero__slogan\">Shaking things up online and offline</strong>\n  </header>\n);\n","import React from 'react';\n\nimport './styles.css';\n\nexport const Main = () => (\n  <section className=\"main\">\n    <article className=\"main__usp\">\n      <h3>Fullstack Javascript</h3>\n      <p>\n        My expertise lies within the Javascript ecosystem. I have worked on multiple frontend and\n        backend production-grade applications. Examples of technologies I am familiar with are:\n        ReactJS, NodeJS, NoSQL, Redis, AWS and Typescript\n      </p>\n    </article>\n    <article className=\"main__usp\">\n      <h3>Bartender</h3>\n      <p>\n        Next to developing, I have a history working as a bartender focused on cocktails. Combining\n        the right ingrediÃ«nts is a task that both developers and cocktail shakers practice every\n        day! Next to that in both professions presentation is key! Cocktails and code should be\n        pieced together from the right parts and also look like quality.\n      </p>\n    </article>\n    <article className=\"main__usp\">\n      <h3>Thinker</h3>\n      <p>\n        I will always try and think of improvements that can be made in a project or codebase. These\n        could be performance improvements, introducing new technologies, or setting up documentation\n        for teams regarding principles and guidelines. All in all, I will always strive to improve\n        not only myself but also others.\n      </p>\n    </article>\n  </section>\n);\n","import React, { Fragment } from 'react';\n\nimport { Footer, Header, Main } from '../components';\n\nconst Home = () => (\n  <Fragment>\n    <Header />\n    <Main />\n    <Footer />\n  </Fragment>\n);\n\nexport default Home;\n","import React from 'react';\n\nimport { Home } from './pages';\n\nconst App = () => (\n  <main className=\"app\">\n    <Home />\n  </main>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './sakura.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}